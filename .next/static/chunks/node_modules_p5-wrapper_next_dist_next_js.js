"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["node_modules_p5-wrapper_next_dist_next_js"],{

/***/ "./node_modules/@p5-wrapper/next/dist/next.js":
/*!****************************************************!*\
  !*** ./node_modules/@p5-wrapper/next/dist/next.js ***!
  \****************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NextReactP5Wrapper: () => (/* binding */ Tr)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n\nfunction dr(p) {\n  return p && p.__esModule && Object.prototype.hasOwnProperty.call(p, \"default\") ? p.default : p;\n}\nvar le = { exports: {} }, B = {};\nB._ = B._interop_require_default = pr;\nfunction pr(p) {\n  return p && p.__esModule ? p : { default: p };\n}\nvar se = { exports: {} }, V = {};\n/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Fe;\nfunction vr() {\n  if (Fe)\n    return V;\n  Fe = 1;\n  var p = react__WEBPACK_IMPORTED_MODULE_0__, E = Symbol.for(\"react.element\"), T = Symbol.for(\"react.fragment\"), C = Object.prototype.hasOwnProperty, j = p.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner, D = { key: !0, ref: !0, __self: !0, __source: !0 };\n  function x(P, b, k) {\n    var l, v = {}, g = null, d = null;\n    k !== void 0 && (g = \"\" + k), b.key !== void 0 && (g = \"\" + b.key), b.ref !== void 0 && (d = b.ref);\n    for (l in b)\n      C.call(b, l) && !D.hasOwnProperty(l) && (v[l] = b[l]);\n    if (P && P.defaultProps)\n      for (l in b = P.defaultProps, b)\n        v[l] === void 0 && (v[l] = b[l]);\n    return { $$typeof: E, type: P, key: g, ref: d, props: v, _owner: j.current };\n  }\n  return V.Fragment = T, V.jsx = x, V.jsxs = x, V;\n}\nvar U = {};\n/**\n * @license React\n * react-jsx-runtime.development.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar Le;\nfunction _r() {\n  return Le || (Le = 1,  true && function() {\n    var p = react__WEBPACK_IMPORTED_MODULE_0__, E = Symbol.for(\"react.element\"), T = Symbol.for(\"react.portal\"), C = Symbol.for(\"react.fragment\"), j = Symbol.for(\"react.strict_mode\"), D = Symbol.for(\"react.profiler\"), x = Symbol.for(\"react.provider\"), P = Symbol.for(\"react.context\"), b = Symbol.for(\"react.forward_ref\"), k = Symbol.for(\"react.suspense\"), l = Symbol.for(\"react.suspense_list\"), v = Symbol.for(\"react.memo\"), g = Symbol.for(\"react.lazy\"), d = Symbol.for(\"react.offscreen\"), s = Symbol.iterator, _ = \"@@iterator\";\n    function o(e) {\n      if (e === null || typeof e != \"object\")\n        return null;\n      var r = s && e[s] || e[_];\n      return typeof r == \"function\" ? r : null;\n    }\n    var f = p.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    function m(e) {\n      {\n        for (var r = arguments.length, t = new Array(r > 1 ? r - 1 : 0), n = 1; n < r; n++)\n          t[n - 1] = arguments[n];\n        W(\"error\", e, t);\n      }\n    }\n    function W(e, r, t) {\n      {\n        var n = f.ReactDebugCurrentFrame, u = n.getStackAddendum();\n        u !== \"\" && (r += \"%s\", t = t.concat([u]));\n        var c = t.map(function(i) {\n          return String(i);\n        });\n        c.unshift(\"Warning: \" + r), Function.prototype.apply.call(console[e], console, c);\n      }\n    }\n    var M = !1, R = !1, L = !1, O = !1, $e = !1, fe;\n    fe = Symbol.for(\"react.module.reference\");\n    function We(e) {\n      return !!(typeof e == \"string\" || typeof e == \"function\" || e === C || e === D || $e || e === j || e === k || e === l || O || e === d || M || R || L || typeof e == \"object\" && e !== null && (e.$$typeof === g || e.$$typeof === v || e.$$typeof === x || e.$$typeof === P || e.$$typeof === b || // This needs to include all possible module reference object\n      // types supported by any Flight configuration anywhere since\n      // we don't know which Flight build this will end up being used\n      // with.\n      e.$$typeof === fe || e.getModuleId !== void 0));\n    }\n    function Me(e, r, t) {\n      var n = e.displayName;\n      if (n)\n        return n;\n      var u = r.displayName || r.name || \"\";\n      return u !== \"\" ? t + \"(\" + u + \")\" : t;\n    }\n    function ce(e) {\n      return e.displayName || \"Context\";\n    }\n    function A(e) {\n      if (e == null)\n        return null;\n      if (typeof e.tag == \"number\" && m(\"Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue.\"), typeof e == \"function\")\n        return e.displayName || e.name || null;\n      if (typeof e == \"string\")\n        return e;\n      switch (e) {\n        case C:\n          return \"Fragment\";\n        case T:\n          return \"Portal\";\n        case D:\n          return \"Profiler\";\n        case j:\n          return \"StrictMode\";\n        case k:\n          return \"Suspense\";\n        case l:\n          return \"SuspenseList\";\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case P:\n            var r = e;\n            return ce(r) + \".Consumer\";\n          case x:\n            var t = e;\n            return ce(t._context) + \".Provider\";\n          case b:\n            return Me(e, e.render, \"ForwardRef\");\n          case v:\n            var n = e.displayName || null;\n            return n !== null ? n : A(e.type) || \"Memo\";\n          case g: {\n            var u = e, c = u._payload, i = u._init;\n            try {\n              return A(i(c));\n            } catch {\n              return null;\n            }\n          }\n        }\n      return null;\n    }\n    var I = Object.assign, q = 0, de, pe, ve, _e, me, he, be;\n    function ye() {\n    }\n    ye.__reactDisabledLog = !0;\n    function qe() {\n      {\n        if (q === 0) {\n          de = console.log, pe = console.info, ve = console.warn, _e = console.error, me = console.group, he = console.groupCollapsed, be = console.groupEnd;\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            value: ye,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            info: e,\n            log: e,\n            warn: e,\n            error: e,\n            group: e,\n            groupCollapsed: e,\n            groupEnd: e\n          });\n        }\n        q++;\n      }\n    }\n    function Ye() {\n      {\n        if (q--, q === 0) {\n          var e = {\n            configurable: !0,\n            enumerable: !0,\n            writable: !0\n          };\n          Object.defineProperties(console, {\n            log: I({}, e, {\n              value: de\n            }),\n            info: I({}, e, {\n              value: pe\n            }),\n            warn: I({}, e, {\n              value: ve\n            }),\n            error: I({}, e, {\n              value: _e\n            }),\n            group: I({}, e, {\n              value: me\n            }),\n            groupCollapsed: I({}, e, {\n              value: he\n            }),\n            groupEnd: I({}, e, {\n              value: be\n            })\n          });\n        }\n        q < 0 && m(\"disabledDepth fell below zero. This is a bug in React. Please file an issue.\");\n      }\n    }\n    var Z = f.ReactCurrentDispatcher, Q;\n    function G(e, r, t) {\n      {\n        if (Q === void 0)\n          try {\n            throw Error();\n          } catch (u) {\n            var n = u.stack.trim().match(/\\n( *(at )?)/);\n            Q = n && n[1] || \"\";\n          }\n        return `\n` + Q + e;\n      }\n    }\n    var ee = !1, J;\n    {\n      var Ve = typeof WeakMap == \"function\" ? WeakMap : Map;\n      J = new Ve();\n    }\n    function ge(e, r) {\n      if (!e || ee)\n        return \"\";\n      {\n        var t = J.get(e);\n        if (t !== void 0)\n          return t;\n      }\n      var n;\n      ee = !0;\n      var u = Error.prepareStackTrace;\n      Error.prepareStackTrace = void 0;\n      var c;\n      c = Z.current, Z.current = null, qe();\n      try {\n        if (r) {\n          var i = function() {\n            throw Error();\n          };\n          if (Object.defineProperty(i.prototype, \"props\", {\n            set: function() {\n              throw Error();\n            }\n          }), typeof Reflect == \"object\" && Reflect.construct) {\n            try {\n              Reflect.construct(i, []);\n            } catch (F) {\n              n = F;\n            }\n            Reflect.construct(e, [], i);\n          } else {\n            try {\n              i.call();\n            } catch (F) {\n              n = F;\n            }\n            e.call(i.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (F) {\n            n = F;\n          }\n          e();\n        }\n      } catch (F) {\n        if (F && n && typeof F.stack == \"string\") {\n          for (var a = F.stack.split(`\n`), w = n.stack.split(`\n`), h = a.length - 1, y = w.length - 1; h >= 1 && y >= 0 && a[h] !== w[y]; )\n            y--;\n          for (; h >= 1 && y >= 0; h--, y--)\n            if (a[h] !== w[y]) {\n              if (h !== 1 || y !== 1)\n                do\n                  if (h--, y--, y < 0 || a[h] !== w[y]) {\n                    var S = `\n` + a[h].replace(\" at new \", \" at \");\n                    return e.displayName && S.includes(\"<anonymous>\") && (S = S.replace(\"<anonymous>\", e.displayName)), typeof e == \"function\" && J.set(e, S), S;\n                  }\n                while (h >= 1 && y >= 0);\n              break;\n            }\n        }\n      } finally {\n        ee = !1, Z.current = c, Ye(), Error.prepareStackTrace = u;\n      }\n      var $ = e ? e.displayName || e.name : \"\", Ae = $ ? G($) : \"\";\n      return typeof e == \"function\" && J.set(e, Ae), Ae;\n    }\n    function Ue(e, r, t) {\n      return ge(e, !1);\n    }\n    function Be(e) {\n      var r = e.prototype;\n      return !!(r && r.isReactComponent);\n    }\n    function z(e, r, t) {\n      if (e == null)\n        return \"\";\n      if (typeof e == \"function\")\n        return ge(e, Be(e));\n      if (typeof e == \"string\")\n        return G(e);\n      switch (e) {\n        case k:\n          return G(\"Suspense\");\n        case l:\n          return G(\"SuspenseList\");\n      }\n      if (typeof e == \"object\")\n        switch (e.$$typeof) {\n          case b:\n            return Ue(e.render);\n          case v:\n            return z(e.type, r, t);\n          case g: {\n            var n = e, u = n._payload, c = n._init;\n            try {\n              return z(c(u), r, t);\n            } catch {\n            }\n          }\n        }\n      return \"\";\n    }\n    var H = Object.prototype.hasOwnProperty, Re = {}, Ee = f.ReactDebugCurrentFrame;\n    function K(e) {\n      if (e) {\n        var r = e._owner, t = z(e.type, e._source, r ? r.type : null);\n        Ee.setExtraStackFrame(t);\n      } else\n        Ee.setExtraStackFrame(null);\n    }\n    function Ge(e, r, t, n, u) {\n      {\n        var c = Function.call.bind(H);\n        for (var i in e)\n          if (c(e, i)) {\n            var a = void 0;\n            try {\n              if (typeof e[i] != \"function\") {\n                var w = Error((n || \"React class\") + \": \" + t + \" type `\" + i + \"` is invalid; it must be a function, usually from the `prop-types` package, but received `\" + typeof e[i] + \"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.\");\n                throw w.name = \"Invariant Violation\", w;\n              }\n              a = e[i](r, i, n, t, null, \"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED\");\n            } catch (h) {\n              a = h;\n            }\n            a && !(a instanceof Error) && (K(u), m(\"%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).\", n || \"React class\", t, i, typeof a), K(null)), a instanceof Error && !(a.message in Re) && (Re[a.message] = !0, K(u), m(\"Failed %s type: %s\", t, a.message), K(null));\n          }\n      }\n    }\n    var Je = Array.isArray;\n    function re(e) {\n      return Je(e);\n    }\n    function ze(e) {\n      {\n        var r = typeof Symbol == \"function\" && Symbol.toStringTag, t = r && e[Symbol.toStringTag] || e.constructor.name || \"Object\";\n        return t;\n      }\n    }\n    function He(e) {\n      try {\n        return we(e), !1;\n      } catch {\n        return !0;\n      }\n    }\n    function we(e) {\n      return \"\" + e;\n    }\n    function Te(e) {\n      if (He(e))\n        return m(\"The provided key is an unsupported type %s. This value must be coerced to a string before before using it here.\", ze(e)), we(e);\n    }\n    var Y = f.ReactCurrentOwner, Ke = {\n      key: !0,\n      ref: !0,\n      __self: !0,\n      __source: !0\n    }, Ce, Pe, te;\n    te = {};\n    function Xe(e) {\n      if (H.call(e, \"ref\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"ref\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.ref !== void 0;\n    }\n    function Ze(e) {\n      if (H.call(e, \"key\")) {\n        var r = Object.getOwnPropertyDescriptor(e, \"key\").get;\n        if (r && r.isReactWarning)\n          return !1;\n      }\n      return e.key !== void 0;\n    }\n    function Qe(e, r) {\n      if (typeof e.ref == \"string\" && Y.current && r && Y.current.stateNode !== r) {\n        var t = A(Y.current.type);\n        te[t] || (m('Component \"%s\" contains the string ref \"%s\". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref', A(Y.current.type), e.ref), te[t] = !0);\n      }\n    }\n    function er(e, r) {\n      {\n        var t = function() {\n          Ce || (Ce = !0, m(\"%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        t.isReactWarning = !0, Object.defineProperty(e, \"key\", {\n          get: t,\n          configurable: !0\n        });\n      }\n    }\n    function rr(e, r) {\n      {\n        var t = function() {\n          Pe || (Pe = !0, m(\"%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)\", r));\n        };\n        t.isReactWarning = !0, Object.defineProperty(e, \"ref\", {\n          get: t,\n          configurable: !0\n        });\n      }\n    }\n    var tr = function(e, r, t, n, u, c, i) {\n      var a = {\n        // This tag allows us to uniquely identify this as a React Element\n        $$typeof: E,\n        // Built-in properties that belong on the element\n        type: e,\n        key: r,\n        ref: t,\n        props: i,\n        // Record the component responsible for creating this element.\n        _owner: c\n      };\n      return a._store = {}, Object.defineProperty(a._store, \"validated\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !0,\n        value: !1\n      }), Object.defineProperty(a, \"_self\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: n\n      }), Object.defineProperty(a, \"_source\", {\n        configurable: !1,\n        enumerable: !1,\n        writable: !1,\n        value: u\n      }), Object.freeze && (Object.freeze(a.props), Object.freeze(a)), a;\n    };\n    function nr(e, r, t, n, u) {\n      {\n        var c, i = {}, a = null, w = null;\n        t !== void 0 && (Te(t), a = \"\" + t), Ze(r) && (Te(r.key), a = \"\" + r.key), Xe(r) && (w = r.ref, Qe(r, u));\n        for (c in r)\n          H.call(r, c) && !Ke.hasOwnProperty(c) && (i[c] = r[c]);\n        if (e && e.defaultProps) {\n          var h = e.defaultProps;\n          for (c in h)\n            i[c] === void 0 && (i[c] = h[c]);\n        }\n        if (a || w) {\n          var y = typeof e == \"function\" ? e.displayName || e.name || \"Unknown\" : e;\n          a && er(i, y), w && rr(i, y);\n        }\n        return tr(e, a, w, u, n, Y.current, i);\n      }\n    }\n    var ne = f.ReactCurrentOwner, Oe = f.ReactDebugCurrentFrame;\n    function N(e) {\n      if (e) {\n        var r = e._owner, t = z(e.type, e._source, r ? r.type : null);\n        Oe.setExtraStackFrame(t);\n      } else\n        Oe.setExtraStackFrame(null);\n    }\n    var ae;\n    ae = !1;\n    function oe(e) {\n      return typeof e == \"object\" && e !== null && e.$$typeof === E;\n    }\n    function Se() {\n      {\n        if (ne.current) {\n          var e = A(ne.current.type);\n          if (e)\n            return `\n\nCheck the render method of \\`` + e + \"`.\";\n        }\n        return \"\";\n      }\n    }\n    function ar(e) {\n      {\n        if (e !== void 0) {\n          var r = e.fileName.replace(/^.*[\\\\\\/]/, \"\"), t = e.lineNumber;\n          return `\n\nCheck your code at ` + r + \":\" + t + \".\";\n        }\n        return \"\";\n      }\n    }\n    var je = {};\n    function or(e) {\n      {\n        var r = Se();\n        if (!r) {\n          var t = typeof e == \"string\" ? e : e.displayName || e.name;\n          t && (r = `\n\nCheck the top-level render call using <` + t + \">.\");\n        }\n        return r;\n      }\n    }\n    function xe(e, r) {\n      {\n        if (!e._store || e._store.validated || e.key != null)\n          return;\n        e._store.validated = !0;\n        var t = or(r);\n        if (je[t])\n          return;\n        je[t] = !0;\n        var n = \"\";\n        e && e._owner && e._owner !== ne.current && (n = \" It was passed a child from \" + A(e._owner.type) + \".\"), N(e), m('Each child in a list should have a unique \"key\" prop.%s%s See https://reactjs.org/link/warning-keys for more information.', t, n), N(null);\n      }\n    }\n    function ke(e, r) {\n      {\n        if (typeof e != \"object\")\n          return;\n        if (re(e))\n          for (var t = 0; t < e.length; t++) {\n            var n = e[t];\n            oe(n) && xe(n, r);\n          }\n        else if (oe(e))\n          e._store && (e._store.validated = !0);\n        else if (e) {\n          var u = o(e);\n          if (typeof u == \"function\" && u !== e.entries)\n            for (var c = u.call(e), i; !(i = c.next()).done; )\n              oe(i.value) && xe(i.value, r);\n        }\n      }\n    }\n    function ir(e) {\n      {\n        var r = e.type;\n        if (r == null || typeof r == \"string\")\n          return;\n        var t;\n        if (typeof r == \"function\")\n          t = r.propTypes;\n        else if (typeof r == \"object\" && (r.$$typeof === b || // Note: Memo only checks outer props here.\n        // Inner props are checked in the reconciler.\n        r.$$typeof === v))\n          t = r.propTypes;\n        else\n          return;\n        if (t) {\n          var n = A(r);\n          Ge(t, e.props, \"prop\", n, e);\n        } else if (r.PropTypes !== void 0 && !ae) {\n          ae = !0;\n          var u = A(r);\n          m(\"Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?\", u || \"Unknown\");\n        }\n        typeof r.getDefaultProps == \"function\" && !r.getDefaultProps.isReactClassApproved && m(\"getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.\");\n      }\n    }\n    function ur(e) {\n      {\n        for (var r = Object.keys(e.props), t = 0; t < r.length; t++) {\n          var n = r[t];\n          if (n !== \"children\" && n !== \"key\") {\n            N(e), m(\"Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.\", n), N(null);\n            break;\n          }\n        }\n        e.ref !== null && (N(e), m(\"Invalid attribute `ref` supplied to `React.Fragment`.\"), N(null));\n      }\n    }\n    function De(e, r, t, n, u, c) {\n      {\n        var i = We(e);\n        if (!i) {\n          var a = \"\";\n          (e === void 0 || typeof e == \"object\" && e !== null && Object.keys(e).length === 0) && (a += \" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.\");\n          var w = ar(u);\n          w ? a += w : a += Se();\n          var h;\n          e === null ? h = \"null\" : re(e) ? h = \"array\" : e !== void 0 && e.$$typeof === E ? (h = \"<\" + (A(e.type) || \"Unknown\") + \" />\", a = \" Did you accidentally export a JSX literal instead of a component?\") : h = typeof e, m(\"React.jsx: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s\", h, a);\n        }\n        var y = nr(e, r, t, u, c);\n        if (y == null)\n          return y;\n        if (i) {\n          var S = r.children;\n          if (S !== void 0)\n            if (n)\n              if (re(S)) {\n                for (var $ = 0; $ < S.length; $++)\n                  ke(S[$], e);\n                Object.freeze && Object.freeze(S);\n              } else\n                m(\"React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.\");\n            else\n              ke(S, e);\n        }\n        return e === C ? ur(y) : ir(y), y;\n      }\n    }\n    function lr(e, r, t) {\n      return De(e, r, t, !0);\n    }\n    function sr(e, r, t) {\n      return De(e, r, t, !1);\n    }\n    var fr = sr, cr = lr;\n    U.Fragment = C, U.jsx = fr, U.jsxs = cr;\n  }()), U;\n}\n false ? 0 : se.exports = _r();\nvar mr = se.exports;\nfunction hr(p) {\n  throw new Error('Could not dynamically require \"' + p + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\nvar ie = {}, ue = {}, Ie;\nfunction br() {\n  return Ie || (Ie = 1, function(p) {\n    \"use client\";\n    Object.defineProperty(p, \"__esModule\", {\n      value: !0\n    }), Object.defineProperty(p, \"LoadableContext\", {\n      enumerable: !0,\n      get: function() {\n        return C;\n      }\n    });\n    const C = (/* @__PURE__ */ B._(react__WEBPACK_IMPORTED_MODULE_0__)).default.createContext(null);\n     true && (C.displayName = \"LoadableContext\");\n  }(ue)), ue;\n}\nvar Ne;\nfunction yr() {\n  return Ne || (Ne = 1, function(p) {\n    Object.defineProperty(p, \"__esModule\", {\n      value: !0\n    }), Object.defineProperty(p, \"default\", {\n      enumerable: !0,\n      get: function() {\n        return d;\n      }\n    });\n    const T = /* @__PURE__ */ B._(react__WEBPACK_IMPORTED_MODULE_0__), C = br();\n    function j(s) {\n      return s && s.default ? s.default : s;\n    }\n    const D = [], x = [];\n    let P = !1;\n    function b(s) {\n      let _ = s(), o = {\n        loading: !0,\n        loaded: null,\n        error: null\n      };\n      return o.promise = _.then((f) => (o.loading = !1, o.loaded = f, f)).catch((f) => {\n        throw o.loading = !1, o.error = f, f;\n      }), o;\n    }\n    function k(s, _) {\n      let o = Object.assign({\n        loader: null,\n        loading: null,\n        delay: 200,\n        timeout: null,\n        webpack: null,\n        modules: null\n      }, _), f = null;\n      function m() {\n        if (!f) {\n          const R = new l(s, o);\n          f = {\n            getCurrentValue: R.getCurrentValue.bind(R),\n            subscribe: R.subscribe.bind(R),\n            retry: R.retry.bind(R),\n            promise: R.promise.bind(R)\n          };\n        }\n        return f.promise();\n      }\n      if (typeof window > \"u\" && D.push(m), !P && typeof window < \"u\") {\n        const R = o.webpack && typeof hr.resolveWeak == \"function\" ? o.webpack() : o.modules;\n        R && x.push((L) => {\n          for (const O of R)\n            if (L.includes(O))\n              return m();\n        });\n      }\n      function W() {\n        m();\n        const R = T.default.useContext(C.LoadableContext);\n        R && Array.isArray(o.modules) && o.modules.forEach((L) => {\n          R(L);\n        });\n      }\n      function M(R, L) {\n        W();\n        const O = T.default.useSyncExternalStore(f.subscribe, f.getCurrentValue, f.getCurrentValue);\n        return T.default.useImperativeHandle(L, () => ({\n          retry: f.retry\n        }), []), T.default.useMemo(() => O.loading || O.error ? /* @__PURE__ */ T.default.createElement(o.loading, {\n          isLoading: O.loading,\n          pastDelay: O.pastDelay,\n          timedOut: O.timedOut,\n          error: O.error,\n          retry: f.retry\n        }) : O.loaded ? /* @__PURE__ */ T.default.createElement(j(O.loaded), R) : null, [\n          R,\n          O\n        ]);\n      }\n      return M.preload = () => m(), M.displayName = \"LoadableComponent\", /* @__PURE__ */ T.default.forwardRef(M);\n    }\n    class l {\n      promise() {\n        return this._res.promise;\n      }\n      retry() {\n        this._clearTimeouts(), this._res = this._loadFn(this._opts.loader), this._state = {\n          pastDelay: !1,\n          timedOut: !1\n        };\n        const { _res: _, _opts: o } = this;\n        _.loading && (typeof o.delay == \"number\" && (o.delay === 0 ? this._state.pastDelay = !0 : this._delay = setTimeout(() => {\n          this._update({\n            pastDelay: !0\n          });\n        }, o.delay)), typeof o.timeout == \"number\" && (this._timeout = setTimeout(() => {\n          this._update({\n            timedOut: !0\n          });\n        }, o.timeout))), this._res.promise.then(() => {\n          this._update({}), this._clearTimeouts();\n        }).catch((f) => {\n          this._update({}), this._clearTimeouts();\n        }), this._update({});\n      }\n      _update(_) {\n        this._state = {\n          ...this._state,\n          error: this._res.error,\n          loaded: this._res.loaded,\n          loading: this._res.loading,\n          ..._\n        }, this._callbacks.forEach((o) => o());\n      }\n      _clearTimeouts() {\n        clearTimeout(this._delay), clearTimeout(this._timeout);\n      }\n      getCurrentValue() {\n        return this._state;\n      }\n      subscribe(_) {\n        return this._callbacks.add(_), () => {\n          this._callbacks.delete(_);\n        };\n      }\n      constructor(_, o) {\n        this._loadFn = _, this._opts = o, this._callbacks = /* @__PURE__ */ new Set(), this._delay = null, this._timeout = null, this.retry();\n      }\n    }\n    function v(s) {\n      return k(b, s);\n    }\n    function g(s, _) {\n      let o = [];\n      for (; s.length; ) {\n        let f = s.pop();\n        o.push(f(_));\n      }\n      return Promise.all(o).then(() => {\n        if (s.length)\n          return g(s, _);\n      });\n    }\n    v.preloadAll = () => new Promise((s, _) => {\n      g(D).then(s, _);\n    }), v.preloadReady = (s) => (s === void 0 && (s = []), new Promise((_) => {\n      const o = () => (P = !0, _());\n      g(x, s).then(o, o);\n    })), typeof window < \"u\" && (window.__NEXT_PRELOADREADY = v.preloadReady);\n    const d = v;\n  }(ie)), ie;\n}\n(function(p, E) {\n  Object.defineProperty(E, \"__esModule\", {\n    value: !0\n  });\n  function T(l, v) {\n    for (var g in v)\n      Object.defineProperty(l, g, {\n        enumerable: !0,\n        get: v[g]\n      });\n  }\n  T(E, {\n    noSSR: function() {\n      return b;\n    },\n    default: function() {\n      return k;\n    }\n  });\n  const C = B, j = mr, D = /* @__PURE__ */ C._(yr()), x = typeof window > \"u\";\n  function P(l) {\n    return {\n      default: (l == null ? void 0 : l.default) || l\n    };\n  }\n  function b(l, v) {\n    if (delete v.webpack, delete v.modules, !x)\n      return l(v);\n    const g = v.loading;\n    return () => /* @__PURE__ */ (0, j.jsx)(g, {\n      error: null,\n      isLoading: !0,\n      pastDelay: !1,\n      timedOut: !1\n    });\n  }\n  function k(l, v) {\n    let g = D.default, d = {\n      // A loading component is not required, so we default it\n      loading: (o) => {\n        let { error: f, isLoading: m, pastDelay: W } = o;\n        if (!W)\n          return null;\n        if (true) {\n          if (m)\n            return null;\n          if (f)\n            return /* @__PURE__ */ (0, j.jsxs)(\"p\", {\n              children: [\n                f.message,\n                /* @__PURE__ */ (0, j.jsx)(\"br\", {}),\n                f.stack\n              ]\n            });\n        }\n        return null;\n      }\n    };\n    l instanceof Promise ? d.loader = () => l : typeof l == \"function\" ? d.loader = l : typeof l == \"object\" && (d = {\n      ...d,\n      ...l\n    }), d = {\n      ...d,\n      ...v\n    };\n    const s = d.loader, _ = () => s != null ? s().then(P) : Promise.resolve(P(() => null));\n    return d.loadableGenerated && (d = {\n      ...d,\n      ...d.loadableGenerated\n    }, delete d.loadableGenerated), typeof d.ssr == \"boolean\" && !d.ssr ? (delete d.webpack, delete d.modules, b(g, d)) : g({\n      ...d,\n      loader: _\n    });\n  }\n  (typeof E.default == \"function\" || typeof E.default == \"object\" && E.default !== null) && typeof E.default.__esModule > \"u\" && (Object.defineProperty(E.default, \"__esModule\", { value: !0 }), Object.assign(E.default, E), p.exports = E.default);\n})(le, le.exports);\nvar gr = le.exports, Rr = gr;\nconst Er = /* @__PURE__ */ dr(Rr), Tr = Er(\n  async () => (await __webpack_require__.e(/*! import() */ \"node_modules_p5-wrapper_react_dist_component_react_js\").then(__webpack_require__.bind(__webpack_require__, /*! @p5-wrapper/react */ \"./node_modules/@p5-wrapper/react/dist/component/react.js\"))).ReactP5Wrapper,\n  { ssr: !1 }\n);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./node_modules/@p5-wrapper/next/dist/next.js\n"));

/***/ })

}]);